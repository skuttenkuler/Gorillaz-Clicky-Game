{"version":3,"sources":["components/Wrapper.js","components/Card/Card.js","components/ScoreKeeper/ScoreKeeper.js","App.js","index.js"],"names":["Wrapper","props","children","Card","className","onClick","setClicked","id","alt","name","src","image","ScoreKeeper","class","currentScore","highScore","correctClick","message","App","state","Gorillaz","charClicked","filter","clicked","i","length","setState","sort","a","b","Math","random","this","map","Gorilla","key","Component","ReactDOM","render","document","getElementById"],"mappings":"oqEAIeA,EAFC,SAAAC,GAAK,OAAI,6BAAMA,EAAMC,WCgBtBC,G,MAfF,SAAAF,GAAK,OACjB,yBACCG,UAAU,OACVC,QAAS,kBAAMJ,EAAMK,WAAWL,EAAMM,MACnC,yBAAKH,UAAU,gBACb,yBACCA,UAAU,MACTI,IAAKP,EAAMQ,KACXC,IAAKT,EAAMU,Y,OCWLC,G,MAnBK,SAAAX,GAAK,OACxB,yBAAKG,UAAU,uBACJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,gBACX,4EAGR,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,aACX,4BAAQS,MAAM,UAAd,gBAAqCZ,EAAMa,aAA3C,KACA,6BACA,4BAAQD,MAAM,UAAd,sBAA2CZ,EAAMc,iBCRrEA,G,MAAY,GACZC,EAAe,EACfC,EAAU,GAsFCC,E,2MAlFbC,MAAQ,CACNC,WACAL,YACAC,eACAC,W,EAIFX,WAAa,SAAAC,GACX,IAAMa,EAAW,EAAKD,MAAMC,SAEtBC,EAAcD,EAASE,QAAO,SAAAF,GAAQ,OAAIA,EAASb,KAAOA,KAEhE,GAAGc,EAAY,GAAGE,QAAQ,CACxBP,EAAe,EACfC,EAAS,+CAET,IAAK,IAAIO,EAAI,EAAGA,EAAIJ,EAASK,OAAQD,IACnCJ,EAASI,GAAGD,SAAU,EAGxB,EAAKG,SAAS,CAACT,YACf,EAAKS,SAAS,CAACV,iBACf,EAAKU,SAAS,CAACN,kBAEfC,EAAY,GAAGE,SAAU,EAGzBN,EAAU,cADVD,GAA8B,KAGZD,IAChBA,EAAYC,EACZ,EAAKU,SAAS,CAACX,eAKjBK,EAASO,MAAK,SAACC,EAAEC,GACf,MAAO,GAAMC,KAAKC,YAEpB,EAAKL,SAAS,CAACN,aACf,EAAKM,SAAS,CAACV,iBACf,EAAKU,SAAS,CAACT,a,wEAIX,IAAD,OACP,OACE,6BACA,kBAAC,EAAD,KACE,yBAAKb,UAAU,UACb,oDAEE,sGAIJ,kBAAC,EAAD,CACIU,aAAckB,KAAKb,MAAMH,aACzBD,UAAWiB,KAAKb,MAAMJ,YAE1B,yBAAKX,UAAU,WAAU,4BAAM4B,KAAKb,MAAMF,UAE1C,yBAAKb,UAAU,OACd4B,KAAKb,MAAMC,SAASa,KAAI,SAAAC,GAAO,OAC9B,kBAAC,EAAD,CACE3B,GAAI2B,EAAQ3B,GACZ4B,IAAKD,EAAQ3B,GACbE,KAAMyB,EAAQzB,KACdE,MAAOuB,EAAQvB,MACfL,WAAY,EAAKA,WACjBF,UAAU,uB,GAzEFgC,aCLlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.254cfe3a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Wrapper = props => <div>{props.children}</div>;\n\nexport default Wrapper;","import React from 'react';\nimport \"./Card.css\";\n\nconst Card = props => (\n\t<div \n\t\tclassName=\"card\"\n\t\tonClick={() => props.setClicked(props.id)}>\n\t    <div className=\"imgContainer\">\n\t      <img\n\t      \tclassName=\"img\"\n\t        alt={props.name}\n\t        src={props.image}\n\t      />\n\t    </div>\n\t    \n  </div>\n);\n\nexport default Card;","import React from 'react';\nimport './ScoreKeeper.css';\n\nconst ScoreKeeper = props => (\n\t<div className=\"container scoreBody\">\n            <div className=\"row\">\n                <div className=\"col-5\">\n                    <div className=\"murdockScore\">\n                        <p>Current Champion.. Murdock: 1,000,000pts!! </p>\n                    </div>\n                    </div>\n                <div className=\"col-5 text-right\">\n                    <div className=\"highscore\">\n                        <strong class=\"cScore\"> Your score: {props.currentScore} </strong>\n                        <br></br>\n                        <strong class=\"hScore\"> Actual Highscore: {props.highScore}</strong>\n                    </div>\n                </div>\n            </div>\n        </div>\n);\n\nexport default ScoreKeeper;","import React, { Component } from 'react';\nimport Wrapper from './components/Wrapper';\nimport Card from './components/Card/Card';\nimport Gorillaz from './gorillaz.json'\nimport ScoreKeeper from './components/ScoreKeeper/ScoreKeeper';\nimport './App.css'\n//set globals\nlet highScore = 0;\nlet correctClick = 0;\nlet message = \"\";\n\nclass App extends Component {\n  //state\n  state = {\n    Gorillaz,\n    highScore,\n    correctClick,\n    message,\n  };\n\n  //clicked character\n  setClicked = id => {\n    const Gorillaz = this.state.Gorillaz;\n    //hold clicked values\n    const charClicked = Gorillaz.filter(Gorillaz => Gorillaz.id === id);\n\n    if(charClicked[0].clicked){\n      correctClick = 0;\n      message =\"Wow.. You're really good at this aren't you!\"\n\n      for( var i = 0; i < Gorillaz.length; i++){\n        Gorillaz[i].clicked = false;\n      }\n\n      this.setState({message});\n      this.setState({correctClick});\n      this.setState({Gorillaz});\n    } else {\n      charClicked[0].clicked = true;\n\n      correctClick = correctClick + 100;\n      message = \"Not bad...\"\n\n      if(correctClick > highScore){\n        highScore = correctClick;\n        this.setState({highScore});\n        \n        \n      }\n\n      Gorillaz.sort((a,b) => {\n        return 0.5 - Math.random();\n      });\n      this.setState({Gorillaz});\n      this.setState({correctClick});\n      this.setState({message});\n    }\n  }\n\nrender() {\n  return (\n    <div>\n    <Wrapper>\n      <div className=\"header\">\n        <h1>Gorillaz Touchy Game</h1>\n            \n          <p> Touch a character, careful not to touch the same one twice though....</p>\n   \n        \n      </div>\n      <ScoreKeeper\n          currentScore={this.state.correctClick}\n          highScore={this.state.highScore}\n      />\n      <div className=\"message\"><h3 >{this.state.message}</h3></div>\n      \n      <div className=\"row\">\n      {this.state.Gorillaz.map(Gorilla => (\n        <Card\n          id={Gorilla.id}\n          key={Gorilla.id}\n          name={Gorilla.name}\n          image={Gorilla.image}\n          setClicked={this.setClicked}\n          className=\"col-sm-2\"\n        />\n      ))}\n     \n      </div>\n    </Wrapper>\n  </div>\n    )\n  }\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}